<Application x:Class="CompilePalX.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             StartupUri="GameConfiguration\LaunchWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/themes/light.red.xaml" />
                <ResourceDictionary Source="CompilePalTheme.xaml" />
            </ResourceDictionary.MergedDictionaries>

            
            <Style x:Key="LightCloseButtonStyle"
                   BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Close.Light.Win10}"
                   TargetType="{x:Type Button}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.WindowButtonCommands.Background.MouseOver}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.WindowButtonCommands.Background.Pressed}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="LightButtonStyle"
                   BasedOn="{StaticResource MahApps.Styles.Button.MetroWindow.Light}"
                   TargetType="{x:Type Button}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.WindowButtonCommands.Background.MouseOver}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.IdealForeground}" />
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.WindowButtonCommands.Background.Pressed}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <ControlTemplate x:Key="LabeledTextbox" TargetType="TextBox">
                <StackPanel Margin="0, 0, 0, 5">
                    <StackPanel Orientation="Horizontal">
                        <Label Padding="0, 5 5, 5" Margin="0, 0, -5, 0" Content="{TemplateBinding Tag}" IsTabStop="False"/>
                        <Grid Background="Transparent" Margin="2, 2, 0, 0" Height="12" ToolTip="{TemplateBinding ToolTip}">
                            <iconPacks:PackIconMaterial Height="12" Kind="HelpCircleOutline"  VerticalAlignment="Center" Foreground="{StaticResource CompilePal.Brushes.Link}" IsTabStop="False">
                                <iconPacks:PackIconMaterial.Style>
                                    <Style TargetType="iconPacks:PackIconMaterial">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=Grid}}" Value="True">
                                                <Setter Property="Opacity" Value="0.5"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </iconPacks:PackIconMaterial.Style>
                            </iconPacks:PackIconMaterial>
                            <Grid.Style>
                                <Style TargetType="{x:Type Grid}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=ToolTip}" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                        </Grid>
                    </StackPanel>
                    <TextBox Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, Path=Text}" Focusable="True"/>
                </StackPanel>
            </ControlTemplate>
        </ResourceDictionary>
    </Application.Resources>

</Application>
